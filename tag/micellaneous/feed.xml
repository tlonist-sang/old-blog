<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/tag/micellaneous/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2019-12-28T16:04:50+09:00</updated>
  <id>http://localhost:4000/tag/micellaneous/feed.xml</id>

  
  
  

  
    <title type="html">steady stack | </title>
  

  
    <subtitle>Slow but steady wins the race.</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Enabling VS code snippets for markdown</title>
      <link href="http://localhost:4000/Enabling-Snippets" rel="alternate" type="text/html" title="Enabling VS code snippets for markdown" />
      <published>2019-11-17T00:00:00+09:00</published>
      <updated>2019-11-17T00:00:00+09:00</updated>
      <id>http://localhost:4000/Enabling%20Snippets</id>
      <content type="html" xml:base="http://localhost:4000/Enabling-Snippets">&lt;p&gt;[link_for_enabling_snippets] (https://github.com/Microsoft/vscode/issues/26108)&lt;/p&gt;

&lt;h4 id=&quot;quick-tip-for-enabling-snippets-for-markdown&quot;&gt;Quick tip for enabling snippets for Markdown&lt;/h4&gt;

&lt;p&gt;I’ve been trying to add VS code snippet functions for many times, and the link above was my savior. It is very simple.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Press Shift + CMD + P&lt;/li&gt;
  &lt;li&gt;Go to Preferences : Configure Language Specific Settings&lt;/li&gt;
  &lt;li&gt;Choose Markdown&lt;/li&gt;
  &lt;li&gt;Add the part with &lt;strong&gt;“[markdown]”&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;java.errors.incompleteClasspath.severity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ignore&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C_Cpp.updateChannel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Insiders&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.suggestSelection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vsintellicode.modify.editor.suggestSelection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;automaticallyOverrodeDefaultValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;window.zoomLevel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;workbench.tree.indent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[markdown]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.quickSuggestions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;the-snippet-i-added&quot;&gt;The snippet I added&lt;/h4&gt;

&lt;p&gt;Below is what I added. It makes an image clickable and show its original size. 
This is handy when a figure is not so visible from the html :)&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Clickable image&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prefix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;imglink&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[![img]()]()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;generate clickable image template&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Java Code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prefix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javac&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;```java&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;```&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;get java code&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>tlonist</name>
        
        
      </author>

      

      
        <category term="Micellaneous" />
      

      
        <summary type="html">[link_for_enabling_snippets] (https://github.com/Microsoft/vscode/issues/26108)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Tomcat 9 - Adding reason phrase 200 OK</title>
      <link href="http://localhost:4000/Adding-reason-phrase" rel="alternate" type="text/html" title="Tomcat 9 - Adding reason phrase 200 OK" />
      <published>2019-10-29T00:00:00+09:00</published>
      <updated>2019-10-29T00:00:00+09:00</updated>
      <id>http://localhost:4000/Adding-reason-phrase</id>
      <content type="html" xml:base="http://localhost:4000/Adding-reason-phrase">&lt;h4 id=&quot;abstract&quot;&gt;Abstract&lt;/h4&gt;
&lt;p&gt;From Tomcat 8.5 on, the &lt;strong&gt;‘reason phrase’&lt;/strong&gt;, which states some additional information to the incoming request according to the status code, is omitted. Not only did I feel frustrated for Apache developers who decided not to leave this even as an option, it was an acutal headache for me because the absence of the reason phrase was causing some serious issues for legacy projects.&lt;/p&gt;

&lt;p&gt;There were many people who were suffering from the same cause. Here are some examples.
    &lt;a href=&quot;https://stackoverflow.com/questions/40522145/javatomcat-9-status-code-200-but-response-message-null&quot;&gt;https://stackoverflow.com/questions/40522145/javatomcat-9-status-code-200-but-response-message-null&lt;/a&gt;&lt;br /&gt;
    &lt;a href=&quot;http://tomcat.10.x6.nabble.com/Bug-60362-New-Missing-reason-phrase-in-response-td5057191i40.html&quot;&gt;http://tomcat.10.x6.nabble.com/Bug-60362-New-Missing-reason-phrase-in-response-td5057191i40.html&lt;/a&gt;&lt;br /&gt;
    &lt;a href=&quot;https://superuser.com/questions/1201742/tomcat-reason-phrase&quot;&gt;ttps://superuser.com/questions/1201742/tomcat-reason-phrase&lt;/a&gt;&lt;br /&gt;
    … etc&lt;/p&gt;

&lt;p&gt;Here I’d like to share how to add the reason phrase manually, by manipulating Tomcat 9 source code itself.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The purpose of this article is to show that it is possible; and distribution of edited opensource project may not be permitted and is out of boundary of my knowledge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;1-download-tomcat-9-source-code&quot;&gt;1. Download Tomcat 9 Source code&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Download Tomcat 9 Source from apache Tomcat website (https://tomcat.apache.org/download-90.cgi)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-download-tomcat-8or-85-source-code&quot;&gt;2. Download Tomcat 8(or 8.5) Source code&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Download Tomcat 8 Source from apache Tomcat website (https://tomcat.apache.org/download-80.cgi)
    &lt;h4 id=&quot;3-observe-the-difference-near-reason-phrase&quot;&gt;3. Observe the difference near ‘reason phrase’&lt;/h4&gt;
  &lt;/li&gt;
  &lt;li&gt;Now it gets interesting. Using your IDE or whatever tool you have, try to observe the differences in code where ‘reason phrase’ appears.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;tomcat-85&quot;&gt;Tomcat 8.5&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Write protocol name&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HTTP_11_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Write status code&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_200_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_400_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_404_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendReasonPhrase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Write message&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;coyote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;USE_CUSTOM_STATUS_MSG_IN_HEADER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;HttpMessages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isSafeInHttpHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpMessages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLocale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// The reason phrase is optional but the space before it is not. Skip&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// sending the reason phrase. Clients should ignore it (RFC 7230) and it&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// just wastes bytes.&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Note the &lt;mark&gt;sendReasonPhrase&lt;/mark&gt; part. For 8.5, sending reason phrase is optional and can be manipulated from &lt;mark&gt;server.xml&lt;/mark&gt; file. (refer to &lt;a href=&quot;https://tomcat.apache.org/tomcat-8.5-doc/config/http.html&quot;&gt;link&lt;/a&gt;) But from Tomcat 9 on, it is no longer supported.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;tomcat-9026&quot;&gt;Tomcat 9.0.26&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Write protocol name&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HTTP_11_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Write status code&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_200_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_400_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_404_BYTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// The reason phrase is optional but the space before it is not. Skip&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// sending the reason phrase. Clients should ignore it (RFC 7230) and it&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// just wastes bytes.&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;headerBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Constants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Contrasting the above two code snippets, you can notice that the entire part where it says &lt;mark&gt;sendReasonPhrase&lt;/mark&gt; is missing in Tomcat 9. Your job is to restore this part, together with all the dependencies that are missing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_red.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_red.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Now let’s do something about’em.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4-add-missing-classes-and-variables&quot;&gt;4. Add missing classes and variables&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;HttpMessages (org.apache.tomcat.util.http)
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_httpmessages.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_httpmessages.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Constants (org.apache.coyote)
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_constants.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_constants.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;write function (overloading)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve been trying this on my Macbook. Previously when I was testing this in my Windows desktop it was working smoothly, but somehow the Mac version is not. My IntelliJ is producing errors like below every time I try to launch my simple Spring MVC controller.
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_error.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_error.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;I read from somewhere that the directory system of linux(and Mac) is different from that of Windows, hence causing this kind of error. In fact, when I copied the exact file to Windows and tested it, it was working like a charm.&lt;/li&gt;
  &lt;li&gt;To tackle this problem anyhow (it is absurd that source-built tomcat file cannot be run in OS other than Windows), I reviewd the log (Help -&amp;gt; Show log in Finder) and found out that I was missing a logging library.
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_missing_library.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_missing_library.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; &amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;        &amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;            &amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&amp;lt;/groupId&amp;gt;
&lt;span class=&quot;gp&quot;&gt;            &amp;lt;artifactId&amp;gt;&lt;/span&gt;slf4j-api&amp;lt;/artifactId&amp;gt;
&lt;span class=&quot;gp&quot;&gt;            &amp;lt;version&amp;gt;&lt;/span&gt;1.8.0-beta2&amp;lt;/version&amp;gt;
&lt;span class=&quot;gp&quot;&gt;            &amp;lt;scope&amp;gt;&lt;/span&gt;compile&amp;lt;/scope&amp;gt;
&lt;span class=&quot;gp&quot;&gt;        &amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;    &amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_add_library.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_add_library.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is not working; and something is terribly wrong, and I decided firmly that I won’t spend more than 30 minutes grappling with this bastard.
    &lt;blockquote&gt;
      &lt;p&gt;The problem was from an awefully simple mistake.&lt;/p&gt;
      &lt;h5 id=&quot;i-downloaded-srczip-not-srctargz&quot;&gt;I downloaded src.zip, not src.tar.gz.&lt;/h5&gt;
      &lt;p&gt;There was a reason why Apache Tomcat was provided with two different versions after all. The tomcat directory structure must have been different, something that &amp;gt;cannot be easily manipulated by changing directory structures of visible files.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;5-build-modified-tomcat-9-and-test-if-its-working&quot;&gt;5. Build modified Tomcat 9 and test if it’s working&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Now, go to the Tomcat source directory, and rebuild the project using ant command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_200notworking.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_200notworking.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We definited expected something like this.
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_200working.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_200working.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Let’s examine why.&lt;/li&gt;
  &lt;li&gt;If you look carefully into the class HttpMessages.java, you’ll find that the actual OK code will be inserted with &lt;em&gt;getMessage&lt;/em&gt; fucntion.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// method from Response.&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Does HTTP requires/allow international messages or&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// are pre-defined? The user doesn't see them most of the time&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;st_200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;st_200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sc.200&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The string OK is picked up from a variable &lt;em&gt;sm&lt;/em&gt;, (StringManager). You can simply search from &lt;strong&gt;sc.200&lt;/strong&gt; from the whole package 8.5 or lower, to see where the key value is mapped into in the project. 
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_findsc200.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_findsc200.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy the entire package under the right position.
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_copypackage.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_copypackage.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rebuild using ant, and enjoy the victory!
&lt;a href=&quot;http://localhost:4000/assets/images/tomcat9_victory.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tomcat9_victory.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;concluding&quot;&gt;Concluding…&lt;/h4&gt;

&lt;p&gt;Though I was using Tomcat almost on daily basis with my company’s project, I’ve never actually looked into its source code until this problem was nagging me. OpenSource projects, especially something as big and historical as Tomcat, has somehow been intimidating for me, not just because of its sheer lines of codes, but because its enigmatic(without even looking into them in details!) comments and interfaces. This is a small thing, really; and I might have done something wrong in the process. But it nontheless made me realize that I do not need to run away from intimidating looking codes anymore!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Martin Luther King</name>
        
        
      </author>

      

      
        <category term="Micellaneous" />
      

      
        <summary type="html">Abstract From Tomcat 8.5 on, the ‘reason phrase’, which states some additional information to the incoming request according to the status code, is omitted. Not only did I feel frustrated for Apache developers who decided not to leave this even as an option, it was an acutal headache for me because the absence of the reason phrase was causing some serious issues for legacy projects.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Building Tomcat from its source-2</title>
      <link href="http://localhost:4000/Building-Tomcat-Source-From-Source-2" rel="alternate" type="text/html" title="Building Tomcat from its source-2" />
      <published>2019-10-14T00:00:00+09:00</published>
      <updated>2019-10-14T00:00:00+09:00</updated>
      <id>http://localhost:4000/Building%20Tomcat%20Source%20From%20Source-2</id>
      <content type="html" xml:base="http://localhost:4000/Building-Tomcat-Source-From-Source-2">&lt;p&gt;####Building Tomcat From Its Source - 2 
#####Downloading Tomcat Source and Opening it from an IDE&lt;/p&gt;

&lt;p&gt;There can be various ways to build Tomcat, and I’ll follow the most orthodox approach- from Apache Tomcat Manual. To build it, you need to have Ant. (link provided below)
&lt;strong&gt;Link(Manual)&lt;/strong&gt;: https://tomcat.apache.org/tomcat-9.0-doc/building.html
&lt;strong&gt;Link(Ant)&lt;/strong&gt;: https://ant.apache.org/bindownload.cgi&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat21.png&quot; alt=&quot;img&quot; /&gt;
As noted above, you need to set ant.home so that the ant command can be executed from the command window. Make sure to add them to the &lt;strong&gt;environment variables.&lt;/strong&gt;. One to the $PATH, the other as ANT_HOME.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After setting them, you can type ant -version to see if its correctly applied.
&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat22.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to the downloaded Tomcat Source, enter one depth, find and rename &lt;strong&gt;build.properteis.default&lt;/strong&gt; to &lt;strong&gt;build.properties&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set proxy setting if needed, else you can just leave it as it is.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open command console, go to the directory where the &lt;strong&gt;build.properties&lt;/strong&gt; file is located. Then, simply type ant.
&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat23.png&quot; alt=&quot;img&quot; /&gt;
You will see something going one like below.
&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat24.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When build is successful, Congratulations! you’ve just built a usable Tomcat from its source!
&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat25.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>tlonist</name>
        
        
      </author>

      

      
        <category term="Micellaneous" />
      

      
        <summary type="html">####Building Tomcat From Its Source - 2 #####Downloading Tomcat Source and Opening it from an IDE</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Building Tomcat from its source-1</title>
      <link href="http://localhost:4000/Building-Tomcat-From-Source" rel="alternate" type="text/html" title="Building Tomcat from its source-1" />
      <published>2019-10-14T00:00:00+09:00</published>
      <updated>2019-10-14T00:00:00+09:00</updated>
      <id>http://localhost:4000/Building%20Tomcat%20From%20Source</id>
      <content type="html" xml:base="http://localhost:4000/Building-Tomcat-From-Source">&lt;h3 id=&quot;building-tomcat-from-its-source---1&quot;&gt;Building Tomcat From Its Source - 1&lt;/h3&gt;

&lt;h4 id=&quot;downloading-tomcat-source-and-opening-it-from-an-ide&quot;&gt;Downloading Tomcat Source and Opening it from an IDE&lt;/h4&gt;

&lt;p&gt;So you want to build Tomcat from the downloaded source src.zip? Here we go.
&lt;strong&gt;Link&lt;/strong&gt;: &lt;a href=&quot;https://tomcat.apache.org/download-90.cgi&quot;&gt;Download Source&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Download from Source Code Distributions. (I chose ‘zip’)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can see the source code from IDE. 
 &lt;img src=&quot;/assets/images/buildtomcat1.png&quot; width=&quot;1200px&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(IntelliJ only) IntelliJ won’t recognize the opened source as its source, unless you tell it to.
 &lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat2.png&quot; alt=&quot;img&quot; /&gt;
 Select the java directory, and choose ‘source’ to make it recognize as a Java source file.
 &lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat3.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Right after 3, you will see lots of red linings. This is because the project does not know which JDK should be used for the source code. Set the project SDK setting
 &lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat4.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/buildtomcat5.png&quot; alt=&quot;img&quot; /&gt;
Now you are ready to edit the source as you please, and use it for your own joy.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="Micellaneous" />
      

      
        <summary type="html">Building Tomcat From Its Source - 1</summary>
      

      
      
    </entry>
  
</feed>
